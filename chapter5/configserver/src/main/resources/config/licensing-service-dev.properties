ostock.environment={cipher}1ab6a6efabf75920db1f78e467cdc9f778240eb6829841194218345a0336c736
#ostock.secret={cipher}f59da10c328c756bf7fbe810ff5fc4c896ce96ff78ea180a0e0169cd185c1b43ad678f8b5cab6e8ffb8662dd6a07a8ab902b14937235b7eece9199186fd22aec


# DataSource settings: set here your own configurations for the database
# beware that the port mapping "5400:5432" in chapter5/docker/docker-compose.yml is only for exposure to the
# external host when connecting from another Docker container via the defined bridge network named backend
# we need to use the port the database container uses internally: 5432
# here the hostname database is an alias specified in the docker-compose.yml file
spring.datasource.url = jdbc:postgresql://database:5432/ostock_dev
# fixed ipv4-address mapping is also possible see modifications in chapter5/docker/docker-compose.yml
# spring.datasource.url = jdbc:postgresql://172.22.0.3:5432/ostock_dev
# a third option to specify the host is the container_name: nodeapp which is added to the database service of the
# chapter5/docker/docker-compose.yml
# the url would then be:
#  spring.datasource.url = jdbc:postgresql://pg-db-on-dr:5432/ostock_dev
spring.datasource.username = postgres
spring.datasource.password = {cipher}f4609209a3e75d8ac79a5e3063ce151c2cd28aa431170bb06974b9421e807b6a